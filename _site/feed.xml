<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hank's Personal Blog</title>
    <description>Front-End Engineer, Runner, Web Extension developer.</description>
    <link>https://momane.com/</link>
    <atom:link href="https://momane.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>2020-08-29</pubDate>
    <lastBuildDate>Sat, 29 Aug 2020 11:07:25 +0200</lastBuildDate>
    <generator>Jekyll v3.8.7</generator>
    
      <item>
        <title>Use git archive to zip your source code</title>
        <description>&lt;p&gt;To zip compiled project file is easy, normally I just use &lt;a href=&quot;&quot;&gt;archivejs&lt;/a&gt;, write a small nodejs script, and then add a script in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then I need to zip the source code only. Exclude the dist folder, the huge &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; folder and other folders.&lt;/p&gt;

&lt;p&gt;Basically just source code and exclude everything in .gitignore file.&lt;/p&gt;

&lt;p&gt;I tried to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;archivejs&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;glob&lt;/code&gt; api. Like so:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;folder/**&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But I could not make it works, it either zip nothing or zip everything in my folder, I think it’s because the path that I set is not correct. And I don’t want to 
spend too much time on reading and exploring archivejs’s api doc.&lt;/p&gt;

&lt;p&gt;So I came to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zip&lt;/code&gt; command in terminal. To use it is very simple, just use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-x&lt;/code&gt; to exclude file, like this&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zip &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; output.zip directory &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\*\*&lt;/span&gt;/&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;/node_modules/&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which is great. But the command is too long and if there are many files you want to exclude, you will need to write down them every time.&lt;/p&gt;

&lt;p&gt;At the same time I found that with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git archive&lt;/code&gt; I can do this easily. so just run&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git archive &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;zip HEAD &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; zipfile.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;it will pack all your source code into zip file, exclude everything in the .gitignore file. Super neat.&lt;/p&gt;
</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/how-to-zip-only-source-code</link>
        <guid isPermaLink="true">https://momane.com/how-to-zip-only-source-code</guid>
        
        <category>git</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>how to use jQuery with TypeScript</title>
        <description>&lt;p&gt;It’s 2020, why do you still need to use jQuery?&lt;/p&gt;

&lt;p&gt;Yeah, jQuery has 53.8k stars on Github. And still, there are more than 97% of websites are using it.&lt;/p&gt;

&lt;p&gt;Even if you don’t want to use it in your fancy project. It’s still a good choice to use it when you are building a demo, prototype, or some small side project. I mean, when you are configuring your fancy project with wepack, react/vue/angular, babel, I already have done a small page which can send request to the API and show the result on the page.&lt;/p&gt;

&lt;p&gt;Anyway, if you want to use jQuery with TypeScript. Here are the steps that you need to do.&lt;/p&gt;

&lt;h4 id=&quot;add-jquery&quot;&gt;add jquery&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add jquery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;add-jquery-types&quot;&gt;add jquery types&lt;/h3&gt;

&lt;p&gt;this will suppress VS Code complains that it can not find jquery types&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add @types/jquery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;config-tsconfigjson-to-suppress-another-warning-message&quot;&gt;config tsconfig.json to suppress another warning message&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;can only be default-imported using the ‘allowSyntheticDefaultImports’ flagts(1259)
index.d.ts(35, 1): This module is declared with using ‘export =’, and can only be used with a default import when using the ‘allowSyntheticDefaultImports’ flag.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;goto your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tsconfig.json&lt;/code&gt; file, add one line in your the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compilerOptions&lt;/code&gt; block. if you don’t have this tsconfig file in your project’s root folder, then create one.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;allowSyntheticDefaultImports&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can use jquery in your ts file like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;jquery&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finnally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/how-to-use-jquery-with-typescript</link>
        <guid isPermaLink="true">https://momane.com/how-to-use-jquery-with-typescript</guid>
        
        <category>TypeScript</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>用 Taro 和 Vue 写了一个微信小程序</title>
        <description>&lt;p&gt;最近尝试写微信小程序，毕竟是现在的趋势。然后发现因为入场太晚，各种轮子已经造得遍地飞了。比如这里有一个框架，出自京东，叫做Taro，它的目的是写一份代码，就可以在诸如微信、支付宝、字节跳动（它家的什么app支持小程序？）等端作为小程序运行。&lt;/p&gt;

&lt;p&gt;于是拿来试了以下。我本来只熟悉Vue的，这个Taro原生支持React，代码风格也都是React的样式。虽说现在3.0以上支持Vue了，可是要做的时候还是有一些转换成本。&lt;/p&gt;

&lt;p&gt;然后框架本身也还存在一些bug，不过一次编写，多端运行还是挺有意思的。&lt;/p&gt;

&lt;p&gt;项目地址：https://github.com/hankxdev/taro-v2ex&lt;/p&gt;

&lt;p&gt;以下内容来自README：&lt;/p&gt;

&lt;h3 id=&quot;taro--taro-ui--vue--v2ex-api-多端小程序&quot;&gt;Taro + Taro-UI + Vue + V2EX API 多端小程序&lt;/h3&gt;

&lt;p&gt;如题，这是一个使用了这几个技术的练习项目。我是第一次使用Taro和写微信小程序。Taro官方有个&lt;a href=&quot;https://taro-docs.jd.com/taro/docs/guide/&quot;&gt;渐进式教程&lt;/a&gt;，使用的也是V2EX的API。&lt;/p&gt;
&lt;h4 id=&quot;技术栈&quot;&gt;技术栈：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NervJS/taro&quot;&gt;Taro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NervJS/taro-ui&quot;&gt;Taro-UI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://taro-ui-vue.fontend.com/&quot;&gt;Taro-ui-vue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/igaozp/V2EX-API&quot;&gt;V2EX API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Vue&lt;/li&gt;
  &lt;li&gt;Vuex&lt;/li&gt;
  &lt;li&gt;SCSS&lt;/li&gt;
  &lt;li&gt;Typescript&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;本地运行和测试&quot;&gt;本地运行和测试&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn dev:weapp&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;因为调用了v2ex 的API，用自己的微信小程序ID的话，需要去后台设置一下域名白名单，否则 API 调用会失败。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;比教程多了一些的是&quot;&gt;比教程多了一些的是：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;代码完整。官方教程的代码比较零散，甚至有些跑不通。&lt;/li&gt;
  &lt;li&gt;用户详情页面和节点详情页面&lt;/li&gt;
  &lt;li&gt;全部使用真正的V2EX API 而不是使用自定义数据&lt;/li&gt;
  &lt;li&gt;自定义 Tabbar&lt;/li&gt;
  &lt;li&gt;使用了Taro-UI来做界面&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;项目存在的问题&quot;&gt;项目存在的问题：&lt;/h4&gt;
&lt;p&gt;以下是我知道的主要问题。大佬们如果发现新问题或者知道这些问题的答案，欢迎提 issues 或者 PR， 望不吝赐教。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;几个页面在切换的时候并不会刷新。这里怀疑是Taro的bug，文档中写的 &lt;a href=&quot;https://nervjs.github.io/taro/docs/vue/#onshow-1&quot;&gt;onShow&lt;/a&gt; 方法并不能在页面显示的时候被成功调用。&lt;/li&gt;
  &lt;li&gt;不怎么好看。因为主要用来熟悉Taro以及微信小程序和多端小程序开发，因此并未在界面上花功夫，几乎没有怎么写样式。使用的全都是Taro-UI 默认的组件。&lt;/li&gt;
  &lt;li&gt;有点卡。一方面v2ex并未提供分页的API。有些 endpoints 诸如获得节点列表、帖子列表等，都是一大堆上千条数据一下子全返回。网络慢的时候导致卡顿更加明显。&lt;/li&gt;
  &lt;li&gt;TypeScript 使用并不规范。我很少写 TypeScript。也一直懒得学，因此基本上都是用JavaScript 的写法在写 TypeScript。同样，写好或者学习 TypeScript 也并不是我写本项目的目的。略过。&lt;/li&gt;
  &lt;li&gt;CustomTabBar 的实现并不规范。现在的做法是写一个 CustomTabBar, 然后放置进每个页面中。正确的做法应该是。
    &lt;ol&gt;
      &lt;li&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app.config.ts&lt;/code&gt; 中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tabList&lt;/code&gt; 里，设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custom: true&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 目录下新建 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custome-tab-bar&lt;/code&gt; 文件夹&lt;/li&gt;
      &lt;li&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custome-tab-bar&lt;/code&gt; 下面添加 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.wxml&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.wxss&lt;/code&gt; 来自定义 tabbar 的样式和行为。 需要注意的是，这里不能直接写 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.vue&lt;/code&gt;，编译不出来的。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/hankxdev/taro-v2ex/raw/master/readme/hot.png&quot; alt=&quot;hot&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/a-wechat-mini-app-with-taro-vue</link>
        <guid isPermaLink="true">https://momane.com/a-wechat-mini-app-with-taro-vue</guid>
        
        <category>wechat</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>How to fix Git show all file as modified in WSL</title>
        <description>&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;If you open your code in Windows, and run git in WSL bash, you will have a big chance to meet an issue that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; shows all your
file get modified.
To fix the issue, run this in WSL bash:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.autocrlf &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Normally I use OSX, but today I have to go back to my Windows PC to try an extension on Edge.&lt;/p&gt;

&lt;p&gt;I’m using WSL (that’s Windows Subsystem for Linux) to manage and build my projects.&lt;/p&gt;

&lt;p&gt;After I cloned my repo from Github, I tried to create a new branch for Edge version. But after I ran &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git branch branchname&lt;/code&gt;
, it told me that there were changes need to commit first.&lt;/p&gt;

&lt;p&gt;So I ran &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt;, to check what’s been changed. Then I got this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/wsl-change-all.png&quot; alt=&quot;all files modified&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This was a simple app. so it’s basically showing that every file got modified. But I hadn’t do anything to any file.&lt;/p&gt;

&lt;p&gt;It’s because I was using git in WSL, but I opened files in Windows system. So the line ending is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CRLF&lt;/code&gt;, but git thought it’s on Linux so the 
line should ends with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LF&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So the fix command will tell git to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CRLF&lt;/code&gt; and line ending.&lt;/p&gt;
</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/how-to-fix-git-show-all-file-as-modified-in-wsl</link>
        <guid isPermaLink="true">https://momane.com/how-to-fix-git-show-all-file-as-modified-in-wsl</guid>
        
        <category>windows</category>
        
        <category>ubuntu</category>
        
        <category>wsl</category>
        
        
        <category>system</category>
        
      </item>
    
      <item>
        <title>Change Ubuntu 20.04 update source to mirror site in China</title>
        <description>&lt;p&gt;Ubuntu 20.04 has been released for a while, its code is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Focal Fossa&lt;/code&gt;.  Again, if you are in China, better change the update source to mirror sites.&lt;/p&gt;

&lt;p&gt;This post is just a copy from &lt;a href=&quot;https://momane.com/change-ubuntu-18-04-source-to-china-mirror&quot;&gt;Change Ubuntu 18.04 update source to mirror site in China&lt;/a&gt;, and I just replaced the source url from thoes ones of 18.04 to 20.04&lt;/p&gt;

&lt;p&gt;Here are several famous mirror sites. What you need todo is pick one from below and edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etc/apt/sources.list&lt;/code&gt;, replace the content in this file.&lt;/p&gt;

&lt;p&gt;There are some links beend commented out.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;starts with&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deb-src&lt;/code&gt; is for source code, without them the speed would be even faster&lt;/li&gt;
  &lt;li&gt;the one with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;focal-proposed&lt;/code&gt; are just proposed updates, only enable them if you know the risk.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Better backup you &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etc/apt/sources.list&lt;/code&gt; before you do this&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;163-netease&quot;&gt;163 (netease)&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;source:http://mirrors.163.com/&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse
# deb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;alibaba-aliyun&quot;&gt;alibaba (aliyun)&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;source:https://opsx.alibaba.com/mirror&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
# deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
# deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
# deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
# deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
# deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And here are also two Chinese university mirror, use them only if you are in Chinese university.&lt;/p&gt;
&lt;h4 id=&quot;tsinghua-university&quot;&gt;tsinghua university&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ustc-university-of-science-and-technology-of-china&quot;&gt;ustc (university of science and technology of China)&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enjoy:)&lt;/p&gt;

</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/change-ubuntu-20-04-source-to-china-mirror</link>
        <guid isPermaLink="true">https://momane.com/change-ubuntu-20-04-source-to-china-mirror</guid>
        
        <category>windows</category>
        
        <category>ubuntu</category>
        
        
        <category>system</category>
        
      </item>
    
      <item>
        <title>How to fix You have to set a contact email in Chrome Web Store</title>
        <description>&lt;p&gt;I have multiple accounts in Chrome Web Store to manage multiple Chrome extensions.&lt;/p&gt;

&lt;p&gt;Today I found that one of my extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/one-click-extensions-mana/pbgjpgbpljobkekbhnnmlikbbfhbhmem&quot;&gt;one click extensions manager&lt;/a&gt; did not get updated as schedule. which is very abnormal because it’s scheduled by Github action, and the log shows that the latest version had been submitted to the store several days ago.&lt;/p&gt;

&lt;p&gt;In the dashboard it’s telling me to add a contract email in my account so that I could publish it. And I already added it long time ago.&lt;/p&gt;

&lt;p&gt;After several meaningless refreshes and clicking on the save button, I realized it might because of my other accounts. So I switched to other accounts and found there is one account without contact email. And the item got published once I fixed this issue.&lt;/p&gt;

&lt;p&gt;So weird because it never asks me to add contact email before. And the store hint is so unclear, it needs you to add contact email on every account, not just the current one.&lt;/p&gt;

&lt;p&gt;Honestly, the new Chrome web store dashboard is not as easy to use as the old one.
Only the UI is fresher than before.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/chrome-web-store-ask-contact-email.png&quot; style=&quot;margin-bottom:15px;&quot; alt=&quot;chrome web store asks for contact email&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also, got an email from Microsoft Edge team, they ask me to submit my extension to Edge store, as Edge is using Chromium now. So if you have published Chrome extension before, you can try 
to submit it to Edge store too. The process would take less than 30 min to do it.&lt;/p&gt;

&lt;p&gt;And, the Edge store dashboard is hard to use too, especially if your extension surppots multiple language, you will need to set information like logo, screenshot, description for every
language. insane, right?.&lt;/p&gt;

</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/fix-you-have-to-set-a-contract-email-chrome-web-store</link>
        <guid isPermaLink="true">https://momane.com/fix-you-have-to-set-a-contract-email-chrome-web-store</guid>
        
        <category>chrome extension</category>
        
        <category>web extension</category>
        
        
        <category>programming</category>
        
        <category>chrome</category>
        
      </item>
    
      <item>
        <title>My First LEGO</title>
        <description>&lt;p&gt;Got a LEGO gift from an old friend. Finished it in two weeks :D Love it a lot.&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;../_site/../img/friends_lego.jpeg&quot; style=&quot;margin-bottom:15px;&quot; alt=&quot;LEGO Friends&quot; width=&quot;800&quot; /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;../_site/../img/friends_lego1.jpeg&quot; style=&quot;margin-bottom:15px;&quot; alt=&quot;LEGO Friends&quot; width=&quot;800&quot; /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;../_site/../img/friends_lego2.jpeg&quot; style=&quot;margin-bottom:15px;&quot; alt=&quot;LEGO Friends&quot; width=&quot;800&quot; /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;../_site/../img/friends_lego3.jpeg&quot; style=&quot;margin-bottom:15px;&quot; alt=&quot;LEGO Friends&quot; width=&quot;800&quot; /&gt;&lt;/div&gt;

</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/my-first-lego-friends</link>
        <guid isPermaLink="true">https://momane.com/my-first-lego-friends</guid>
        
        <category>lego</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>安装了梅林固件的路由器开启SSH以及超频</title>
        <description>&lt;p&gt;部分路由器可以通过安装Merlin梅林固件来实现更多的自定义功能。安装更多第三方插件来让路由器变得更强大。&lt;/p&gt;

&lt;p&gt;在软件自定义的时候不妨试试将路由器进行硬件超频来使其拥有更强劲的性能。&lt;/p&gt;

&lt;p&gt;实现起来也非常简单，不过需要注意的是，超频可能会造成不可恢复的硬件损害，俗称变砖。超频前要三思，也不要妄图过分超频来让路由器硬件性能达到其不可能达到的等级。&lt;/p&gt;

&lt;p&gt;要超频需要先登入路由器命令行。推荐使用SSH。Windows下使用puttty等你熟悉的SSH工具，macOS则直接用终端即可。&lt;/p&gt;

&lt;p&gt;首先梅林默认是不开启SSH的。需要进入路由器管理界面——系统管理——SSH Daemon来开启。
设置如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../_site/../img/merlin-ssh.jpg&quot; style=&quot;margin-bottom:15px;&quot; alt=&quot;merlin ssh&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中选项都非常清楚明白，按照个人所需设置即可。SSH key 可以让你登录的时候不用输入密码。也就是你登录路由器管理页面设置的密码。&lt;/p&gt;

&lt;p&gt;然后在putty或者终端里输入如下命令来登入路由器命令行。命令里的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;用户名&lt;/code&gt;是你在浏览器中登录路由器管理页面的用户名。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh 用户名@192.168.50.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;一般梅林的默认路由器ip有两个，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.2.1&lt;/code&gt;或者&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.50.1&lt;/code&gt;。根据你自己路由器的ip来更改以上命令登入。&lt;/p&gt;

&lt;p&gt;如果你没设置SSH key的话，接下来需要输入密码了。&lt;/p&gt;

&lt;p&gt;密码正确就进入路由器命令行了, 你会看到类似以下文字：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ASUSWRT-Merlin [路由器型号] [梅林版本] Tue Sep 25 12:04:55 UTC 2018
[用户名]@[路由器型号]:/tmp/home/root#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;其中没有中文字的，这里只是说明这里字符代表的意思，你应该能看到你自己路由器的型号、版本、用户名等信息。&lt;/p&gt;

&lt;p&gt;接下来运行以下命令:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nvram set clkfreq=1000,800
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里的1000是设置CPU频率，800是设置内存频率（800相当于1600）。不要改太大。一般建议CPU频率设置数值为默认频率加200就比较安全。性能也能得到较好提升。否则变砖甚至烧机得不偿失。&lt;/p&gt;

&lt;p&gt;然后运行以下命令来提交更改。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nvram commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后运行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reboot&lt;/code&gt;来重启路由器。&lt;/p&gt;

&lt;p&gt;如果没什么问题，重启完成后路由器就超频成功了。&lt;/p&gt;

&lt;p&gt;有时候会遇到路由器亮两个红灯无法正常启动的情况，不要慌，这不是变砖，只是启动失败。刷了梅林之后会经常遇到启动失败的问题。这时候只要给路由器断电，等几秒，再次按电源键启动即可。如果还是启动不了就再重启一次。多试几次一般都能成功启动。&lt;/p&gt;

&lt;p&gt;实在不行只能重置。拿笔戳重置按钮30秒，然后继续按着重置按钮不动，重置电源启动30秒，再关闭电源30秒，最后再启动。传说中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;30-30-30&lt;/code&gt;大法，重置成功就代表没变砖。&lt;/p&gt;
</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/merlin-overclocking</link>
        <guid isPermaLink="true">https://momane.com/merlin-overclocking</guid>
        
        <category>merlin</category>
        
        <category>ssh</category>
        
        
        <category>system</category>
        
      </item>
    
      <item>
        <title>Use Husky to manage git hooks</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks&quot;&gt;Git hooks&lt;/a&gt; is a powerful tool to make your life easier.&lt;/p&gt;

&lt;p&gt;It fires off custom scripts when certain important actions occur. one common scene like:  you want to lint your code every time when you commit
 changes, so that your code has a good style and following your team’s code specification. Or you want to run test before pushing your code/&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Like many other Version Control Systems, Git has a way to fire off custom scripts when certain important actions occur. There are two groups of these hooks: client-side and server-side. Client-side hooks are triggered by operations such as committing and merging, while server-side hooks run on network operations such as receiving pushed commits. You can use these hooks for all sorts of reasons.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With git hooks, you can make these actions automatically.&lt;/p&gt;

&lt;p&gt;While &lt;a href=&quot;https://www.npmjs.com/package/husky&quot;&gt;&lt;strong&gt;husky&lt;/strong&gt;&lt;/a&gt; is a tool to make Git hooks easier to use. To use it is very easy&lt;/p&gt;

&lt;p&gt;First you install it as a development dependency with npm:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;husky &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OR &lt;strong&gt;yarn&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add husky &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; , add:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;husky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hooks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pre-commit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;yarn lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pre-push&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;yarn test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example, we added 2 hooks, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pre-commit&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pre-push&lt;/code&gt;, they are meant what they named.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;pre-commit&lt;/strong&gt; means, every time you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt;, it will run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn lint&lt;/code&gt; first, and commit the code if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn lint&lt;/code&gt; passes without error.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;pre-push&lt;/strong&gt; run command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn test&lt;/code&gt; when you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn lint&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn test&lt;/code&gt; are commands that you define in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt; in package.json. normally those commands that you runs manually, like
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn start&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn dev&lt;/code&gt;, etc. you can add any command you want and run the, in the hooks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pretty straight forward and easy :)&lt;/p&gt;

</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/use-husky-to-manage-git-hooks</link>
        <guid isPermaLink="true">https://momane.com/use-husky-to-manage-git-hooks</guid>
        
        <category>javascript</category>
        
        <category>git</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Use document.execCommand to set value in editable field and trigger events</title>
        <description>&lt;p&gt;&lt;strong&gt;NOTE: This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.execCommand&lt;/code&gt;&lt;/a&gt; api has been marked as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Obsolete&lt;/code&gt;. However, given the situation that new API is still under construction, so it’s still safe to use it for now and maybe for next few years.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To set value in editable filed like input, textarea with javascript is a common requirement in browser extension or other script development. 
Normally you just need to do something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.querySelector('input').value=&quot;text you want to set&quot;&lt;/code&gt; to get the job done easily and quickly.&lt;/p&gt;

&lt;p&gt;But life is not always so easy. Actually most of the time you need to do more in browser extension development. The input fileds always bond many events like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;beforeinput&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;change&lt;/code&gt;, or even &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;focus&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;active&lt;/code&gt;. If you just set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; by javascript, you will also need to trigger these events manually in next steps.&lt;/p&gt;

&lt;p&gt;And before that you will need to find out what events you need to trigger. It gonna take you some time.&lt;/p&gt;

&lt;p&gt;With this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.execCoomand&lt;/code&gt;, you can do it easily.&lt;/p&gt;

&lt;p&gt;The syntax is like this:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;document.execCommand(aCommandName, aShowDefaultUI, aValueArgument)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a &lt;strong&gt;insertText&lt;/strong&gt; you can use to set value.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Inserts the given plain text at the insertion point (deletes selection).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;so to insert text in to a field, you just, focus the field -&amp;gt; select the field -&amp;gt; execute the command, like so:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#target&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;execCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;insertText&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text you want to set&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The best of this API is that, &lt;strong&gt;it imitates user input event, make it like human being activity, trigger all bond events on the filed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This API is very powerful, there are a bunch of commands you can use to make you life easier.&lt;/p&gt;

&lt;p&gt;You can read it’s doc on MDN to get more details: https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&lt;/p&gt;
</description>
        <pubDate>2020-08-29</pubDate>
        <link>https://momane.com/use-document-execcommand-to-set-value</link>
        <guid isPermaLink="true">https://momane.com/use-document-execcommand-to-set-value</guid>
        
        <category>javascript</category>
        
        <category>chrome extension</category>
        
        <category>browser extension</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
